{"version":3,"file":"static/js/667.b36f246e.chunk.js","mappings":"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","sources":["api/movieDbApi.js","components/PopularMovies/PopularMovies.styled.jsx","components/PopularMovies/index.jsx","page/MovieDetails/MovieDetails.styled.jsx","components/Form/Form.styled.jsx","components/Form/index.jsx","page/MoviesPage/index.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '8ae0eb13b175efdd49cca3af4a1ffe3d';\n\nexport const fetchGetTrending = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&query=${query}`\n  );\n  return data;\n};\n\nexport const fetchGetMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchGetMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchGetMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 25px;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 40px 0;\n`;\n\nexport const Item = styled.li`\n  &:hover,\n  &:focus {\n    transition: all 0.25s ease;\n    transform: scale(1.05);\n  }\n`;\n\nexport const MovieLinkStyled = styled(NavLink)`\n  font-weight: 600;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 10px;\n  width: 300px;\n  color: var(--main-color);\n\n  &:hover,\n  &:focus {\n    text-shadow: 0px 4px 4px rgba(250, 250, 250, 0.25);\n    transition: all 0.25s ease;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, MovieLinkStyled } from './PopularMovies.styled';\nimport { ImgMovie } from 'page/MovieDetails/MovieDetails.styled';\n\nconst PopularMovies = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(({ id, title, poster_path, original_title }) => (\n        <Item key={id}>\n          <MovieLinkStyled to={`/movies/${id}`} state={{ from: location }}>\n            <ImgMovie\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={original_title}\n            />\n            <p>{title}</p>\n            \n          </MovieLinkStyled>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default PopularMovies;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const ContainerMovieInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin-bottom: 20px;\n`;\n\nexport const ImgMovie = styled.img`\n  width: 300px;\n  height: 450px;\n\n  object-fit: cover;\n  object-position: center center;\n  background: linear-gradient(\n      180deg,\n      rgba(18, 20, 23, 0.5) 2.5%,\n      rgba(18, 20, 23, 0) 41.07%\n    ),\n    #f3f3f2;\n  box-shadow: 0 0 8px 1px #f3f3f2;\n`;\n\nexport const ContainerDescription = styled.div`\n  max-width: 700px;\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n`;\n\nexport const ListGenres = styled.ul`\n  display: inline-flex;\n  gap: 12px;\n`;\n\nexport const ItemGenres = styled.li`\n  display: flex;\n  flex-shrink: 1;\n\n  &:not(:first-child) {\n    &:before {\n      content: '';\n      display: block;\n      height: auto;\n      width: 1px;\n      background-color: var(--color-pagination);\n      margin-right: 6px;\n    }\n  }\n`;\n\nexport const TitleListInfo = styled.h3`\n  font-weight: 600;\n  font-size: 22px;\n  margin: 20px 0;\n  text-align: center;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const GoBackLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-weight: 600;\n  font-size: 20px;\n  height: 40px;\n  width: 140px;\n\n  color: var(--main-color);\n  text-shadow: 0px 4px 4px rgba(250, 250, 250, 0.25);\n\n  padding: 10px 10px;\n  position: relative;\n  z-index: 0;\n  cursor: pointer;\n\n  &::before,\n  &::after {\n    position: absolute;\n    opacity: 0.5;\n    height: 100%;\n    width: 2px;\n    content: '';\n    background: var(--main-color);\n    transition: all 0.3s;\n  }\n\n  &::before {\n    left: 0px;\n    top: 0px;\n  }\n\n  &::after {\n    right: 0px;\n    bottom: 0px;\n  }\n\n  &:hover&::before,\n  &:hover&::after,\n  &:focus&::before,\n  &:focus&::after {\n    opacity: 1;\n    height: 2px;\n    width: 100%;\n  }\n`;\n\nexport const SpanSvg = styled.span`\n  width: 22px;\n  height: 22px;\n`;\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 350px;\n  padding: 10px 10px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 5px;\n  background: transparent;\n  border: 1px solid var(--main-color);\n  color: var(--main-color);\n  outline: none;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 8px 1px #f3f3f2;\n    transition: all var(--transition);\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  text-align: center;\n  padding: 10px 10px;\n  border-radius: 3px;\n  background-color: transparent;\n  color: var(--main-color);\n  border: 0;\n  cursor: pointer;\n  font: inherit;\n  font-weight: 600;\n  font-size: 20px;\n  min-width: 150px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 8px 1px #f3f3f2;\n    transition: all var(--transition);\n  }\n`;\n","import { Container } from 'Index.styled';\nimport { SearchForm, Input, Button } from './Form.styled';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { GoBackLink, SpanSvg } from 'page/MovieDetails/MovieDetails.styled';\nimport { HiArrowSmallLeft } from 'react-icons/hi2';\n\nconst Form = ({ searchMovies }) => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleInputChange = ({ target: { value } }) => {\n    value ? setSearchParams({ query: value.trim() }) : setSearchParams({});\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: query.trim() });\n    searchMovies(query);\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"movie\"\n          autoFocus\n          value={query}\n          placeholder=\"Enter the movie name\"\n          onChange={handleInputChange}\n        />\n        <Button type=\"submit\">Search</Button>\n\n        <GoBackLink to={location.state?.from ?? '/'}>\n          <SpanSvg>\n            <HiArrowSmallLeft size=\"22\" />\n          </SpanSvg>\n          Go back\n        </GoBackLink>\n      </SearchForm>\n    </Container>\n  );\n};\n\nexport default Form;\n","import { fetchSearchMovie } from 'api/movieDbApi';\nimport Form from 'components/Form';\nimport Loader from 'components/Loader';\nimport PopularMovies from 'components/PopularMovies';\nimport Notiflix from 'notiflix';\nimport { TitleListInfo } from 'page/MovieDetails/MovieDetails.styled';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n  const ref = useRef(query);\n\n  const searchMovie = useCallback(async queryMovie => {\n    try {\n      setLoading(true);\n      const response = await fetchSearchMovie(queryMovie);\n      if (response.total_results === 0) {\n        Notiflix.Notify.failure(\n          'There is no movies with this request. Please, try again!'\n        );\n      }\n      setSearchFilms(response.results);\n      setErrorMessage(false);\n    } catch {\n      Notiflix.Notify.failure('Something went wrong. Try to reload your page!');\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    searchQuery && searchMovie(searchQuery);\n  }, [searchMovie, searchQuery]);\n\n  useEffect(() => {\n    ref.current && searchMovie(ref.current);\n  }, [searchMovie]);\n\n  const handleSetSearchQuery = value => {\n    setSearchQuery(value);\n\n    if (query === '') {\n      setSearchFilms(null);\n      setErrorMessage(true);\n    }\n  };\n\n  return (\n    <>\n      <Form searchMovies={handleSetSearchQuery} />\n      {loading && <Loader />}\n      {errorMessage && (\n        <TitleListInfo>Please enter the movie name!</TitleListInfo>\n      )}\n      {searchFilms && <PopularMovies films={searchFilms} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","fetchGetTrending","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","fetchSearchMovie","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchGetMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchGetMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchGetMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLinkStyled","NavLink","_templateObject3","films","location","useLocation","_jsx","children","map","id","title","poster_path","original_title","_jsxs","to","state","from","ImgMovie","src","alt","ContainerMovieInfo","ContainerDescription","ListGenres","_templateObject4","ItemGenres","_templateObject5","TitleListInfo","_templateObject6","ListInfo","_templateObject7","GoBackLink","_templateObject8","SpanSvg","_templateObject9","SearchForm","Input","Button","_searchParams$get","_location$state$from","_location$state","searchMovies","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","get","Container","onSubmit","event","preventDefault","trim","type","name","autoFocus","value","placeholder","onChange","target","HiArrowSmallLeft","size","_useState","useState","_useState2","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","searchQuery","setSearchQuery","ref","useRef","searchMovie","useCallback","queryMovie","response","total_results","Notiflix","results","t0","finish","useEffect","current","_Fragment","Form","Loader","PopularMovies"],"sourceRoot":""}