{"version":3,"file":"static/js/437.b9e668bc.chunk.js","mappings":"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","sources":["api/movieDbApi.js","components/Cast/Cast.styled.jsx","components/Cast/index.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '8ae0eb13b175efdd49cca3af4a1ffe3d';\n\nexport const fetchGetTrending = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&query=${query}`\n  );\n  return data;\n};\n\nexport const fetchGetMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchGetMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchGetMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const ListCast = styled.ul`\n  list-style-type: none;\n`;\n\nexport const TextCast = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n","import { fetchGetMovieCredits } from 'api/movieDbApi';\nimport Loader from 'components/Loader';\nimport Notiflix from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ListCast, TextCast } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovieCredits = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchGetMovieCredits(movieId);\n\n        setCast(response.cast);\n      } catch {\n        Notiflix.Notify.failure(\n          'Something went wrong. Try to reload your page!'\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <ListCast>\n        {cast.map(({ id, profile_path, original_name, name, character }) => (\n          <li key={id}>\n            <img\n              width=\"200px\"\n              src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n              alt={original_name}\n            />\n            <TextCast>{name}</TextCast>\n            <TextCast>Character: {character}</TextCast>\n          </li>\n        ))}\n      </ListCast>\n      {cast.length === 0 && <div>We don't have any cast for this movie</div>}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","API_KEY","fetchGetTrending","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","fetchSearchMovie","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchGetMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchGetMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchGetMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","ListCast","styled","_templateObject","_taggedTemplateLiteral","TextCast","_templateObject2","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","loading","setLoading","useEffect","getMovieCredits","response","t0","Notiflix","finish","_jsxs","children","_jsx","Loader","map","id","profile_path","original_name","name","character","width","src","alt","length"],"sourceRoot":""}