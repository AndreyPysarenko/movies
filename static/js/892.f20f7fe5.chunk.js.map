{"version":3,"file":"static/js/892.f20f7fe5.chunk.js","mappings":"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","sources":["api/movieDbApi.js","page/MovieDetails/MovieDetails.styled.jsx","page/MovieDetails/index.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '8ae0eb13b175efdd49cca3af4a1ffe3d';\n\nexport const fetchGetTrending = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchSearchMovie = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&include_adult=false&language=en-US&page=1&query=${query}`\n  );\n  return data;\n};\n\nexport const fetchGetMovieDetails = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchGetMovieCredits = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data;\n};\n\nexport const fetchGetMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const ContainerMovieInfo = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin-bottom: 20px;\n`;\n\nexport const ImgMovie = styled.img`\n  width: 300px;\n  height: 450px;\n\n  object-fit: cover;\n  object-position: center center;\n  background: linear-gradient(\n      180deg,\n      rgba(18, 20, 23, 0.5) 2.5%,\n      rgba(18, 20, 23, 0) 41.07%\n    ),\n    #f3f3f2;\n  box-shadow: 0 0 8px 1px #f3f3f2;\n`;\n\nexport const ContainerDescription = styled.div`\n  max-width: 700px;\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n`;\n\nexport const ListGenres = styled.ul`\n  display: inline-flex;\n  gap: 12px;\n`;\n\nexport const TitleListInfo = styled.h3`\n  font-weight: 600;\n  font-size: 22px;\n  margin: 20px 0;\n  text-align: center;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const GoBackLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  font-weight: 600;\n  font-size: 20px;\n  height: 40px;\n  width: 140px;\n\n  color: var(--main-color);\n  text-shadow: 0px 4px 4px rgba(250, 250, 250, 0.25);\n\n  padding: 10px 10px;\n  position: relative;\n  z-index: 0;\n  cursor: pointer;\n\n  &::before,\n  &::after {\n    position: absolute;\n    opacity: 0.5;\n    height: 100%;\n    width: 2px;\n    content: '';\n    background: var(--main-color);\n    transition: all 0.3s;\n  }\n\n  &::before {\n    left: 0px;\n    top: 0px;\n  }\n\n  &::after {\n    right: 0px;\n    bottom: 0px;\n  }\n\n  &:hover&::before,\n  &:hover&::after,\n  &:focus&::before,\n  &:focus&::after {\n    opacity: 1;\n    height: 2px;\n    width: 100%;\n  }\n`;\n\nexport const SpanSvg = styled.span`\n  width: 22px;\n  height: 22px;\n`;\n","import { fetchGetMovieDetails } from 'api/movieDbApi';\nimport { HiArrowSmallLeft } from 'react-icons/hi2';\nimport Loader from 'components/Loader';\nimport Notiflix from 'notiflix';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  ContainerDescription,\n  ContainerMovieInfo,\n  GoBackLink,\n  ImgMovie,\n  ListGenres,\n  ListInfo,\n  SpanSvg,\n  TitleListInfo,\n} from './MovieDetails.styled';\nimport { Container } from 'Index.styled';\nimport { Link } from 'components/Header/Header.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchGetMovieDetails(movieId);\n        setMovieInfo(response);\n      } catch {\n        Notiflix.Notify.failure(\n          'Something went wrong. Try to reload your page!'\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  if (!movieInfo) return;\n\n  const {\n    title,\n    release_date,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n    vote_average,\n  } = movieInfo || {};\n\n  return (\n    <Container>\n      {loading && <Loader />}\n\n      {movieInfo && (\n        <ContainerMovieInfo>\n          <ImgMovie\n            src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n            alt={original_title}\n          />\n          <ContainerDescription>\n            <h2>\n              {title} ({release_date.slice(0, 4)})\n            </h2>\n            <p>User score: {`${Math.ceil(vote_average * 10)}%`}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <ListGenres>\n              {genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ListGenres>\n          </ContainerDescription>\n          <GoBackLink to={location.state?.from ?? '/'}>\n            <SpanSvg>\n              <HiArrowSmallLeft size=\"22\" />\n            </SpanSvg>\n            Go back\n          </GoBackLink>\n        </ContainerMovieInfo>\n      )}\n      <hr />\n      <div>\n        <TitleListInfo>Additional information</TitleListInfo>\n        <ListInfo>\n          <li>\n            <Link to=\"cast\" state={location.state}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={location.state}>\n              Reviews\n            </Link>\n          </li>\n        </ListInfo>\n        <hr />\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </div>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchGetTrending","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","fetchSearchMovie","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchGetMovieDetails","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchGetMovieCredits","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchGetMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","ContainerMovieInfo","styled","_templateObject","_taggedTemplateLiteral","ImgMovie","_templateObject2","ContainerDescription","_templateObject3","ListGenres","_templateObject4","TitleListInfo","_templateObject5","ListInfo","_templateObject6","GoBackLink","NavLink","_templateObject7","SpanSvg","_templateObject8","_location$state$from","_location$state","useParams","_useState","useState","_useState2","_slicedToArray","movieInfo","setMovieInfo","_useState3","_useState4","loading","setLoading","location","useLocation","useEffect","getMovieDetails","response","t0","Notiflix","finish","title","release_date","overview","genres","poster_path","original_title","vote_average","_jsxs","Container","children","_jsx","Loader","src","alt","slice","Math","ceil","map","id","name","to","state","from","HiArrowSmallLeft","size","Link","Suspense","Outlet"],"sourceRoot":""}